import { c as createContext } from './hooks.mjs';

const DATA_COLLECTION_ITEM = "data-radix-collection-item";
function createCollection(name) {
  const [_provideCollectionContext, useCollectionContext] = createContext(`${name}CollectionProvider`);
  function provideCollectionContext(collectionRef, provide = true) {
    const context = {
      collectionRef
    };
    if (provide)
      _provideCollectionContext(context);
    return context;
  }
  function useCollectionItem(currentElement, attrs, key) {
    if (!key)
      return;
    const unrefElement = currentElement;
    if (!unrefElement)
      return;
    if ("$$rcid" in unrefElement) {
      if (key in unrefElement.$$rcid)
        return;
      unrefElement.$$rcid[key] = attrs;
    } else {
      unrefElement.$$rcid = {
        [key]: attrs
      };
    }
  }
  function useCollection(thereContext) {
    const context = thereContext || useCollectionContext(`${name}CollectionConsumer`);
    function getItems() {
      if (!context.collectionRef.value)
        return [];
      const orderedNodes = Array.from(context.collectionRef.value.querySelectorAll(`[${DATA_COLLECTION_ITEM}]:not([data-disabled])`));
      return orderedNodes;
    }
    return getItems;
  }
  return [
    {
      provideCollectionContext,
      useCollectionContext,
      useCollectionItem
    },
    useCollection
  ];
}

export { DATA_COLLECTION_ITEM as D, createCollection as c };
//# sourceMappingURL=collection.mjs.map
