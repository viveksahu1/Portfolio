import { defineComponent, Comment, warn, cloneVNode } from 'vue';
import { d as getRawChildren } from './shared.mjs';

const Slot = defineComponent({
  name: "Slot",
  setup(_, { slots, attrs }) {
    return () => {
      if (!slots.default)
        return null;
      const children = slots.default && getRawChildren(slots.default());
      if (!children || !children.length)
        return null;
      let child = children[0];
      if (children.length > 1) {
        let hasFound = false;
        for (const c of children) {
          if (c.type !== Comment) {
            if (__DEV__ && hasFound) {
              warn(
                "<Slot> can only be used on a single element or component."
              );
              break;
            }
            child = c;
            hasFound = true;
            if (!__DEV__)
              break;
          }
        }
      }
      if (child && child.type !== Comment) {
        return cloneVNode(child, attrs, true);
      }
      return null;
    };
  }
});

export { Slot as S };
//# sourceMappingURL=slot.mjs.map
